{"version":3,"sources":["Component/SearchBar.js","Component/MovieList.js","Services/index.js","App.js","reportWebVitals.js","index.js"],"names":["SearchBar","onSearchClick","classes","useStyles","useState","textValue","setTextValue","Paper","component","className","root","InputBase","input","placeholder","onChange","event","target","value","Button","variant","color","onClick","makeStyles","theme","display","alignItems","width","padding","marginBottom","marginLeft","spacing","flex","MovieList","data","rowBtn","mode","nextPageBtn","lastPageBtn","lastPageBtnDisable","nextPageBtnDisable","length","List","map","movie","ListItem","row","text","title","year","disabled","selected","btn","renderRow","pageBtn","paddingBottom","paddingLeft","paddingRight","justifyContent","marginRight","getMovieInfo","movieTitle","page","a","fetch","rawRespond","json","respond","Search","console","log","App","searchList","setSearchList","selectedList","setSelectedList","displaySelectedList","setDisplaySelectedList","searchListPage","setSearchListPage","selectedListPage","setSelectedListPage","setMovieTitle","nextSearchDisable","setNextSearchDisable","searchMovie","nextPageData","id","imdbID","Title","Year","findIndex","movieInList","updateMovieTitle","center","container","addMovie","index","newSelectedList","slice","removeMovie","removeIndex","position","top","left","transform","flexDirection","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.30cebcbb.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Paper, Button, InputBase } from '@material-ui/core';\n\nexport const SearchBar = ({ onSearchClick }) => {\n    const classes = useStyles();\n    const [textValue, setTextValue] = useState();\n\n    return (\n        <Paper component=\"form\" className={classes.root}>\n            <InputBase className={classes.input} placeholder=\"Please enter movie title\" onChange={(event) => setTextValue(event.target.value)} />\n            <Button variant=\"outlined\" color=\"primary\" onClick={() => onSearchClick(textValue)}>\n                Search\n            </Button>\n        </Paper>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        alignItems: 'center',\n        width: 800,\n        padding: 20,\n        marginBottom: 20,\n    },\n    input: {\n        marginLeft: theme.spacing(1),\n        flex: 1,\n    },\n}));\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { List, Button, ListItem, Paper } from '@material-ui/core';\n\nexport const MovieList = ({ data, rowBtn, mode, nextPageBtn, lastPageBtn, lastPageBtnDisable, nextPageBtnDisable }) => {\n    const classes = useStyles();\n\n    const renderRow = (movie) => {\n        return (\n            <ListItem className={classes.row}>\n                <h10 className={classes.text}>{`${movie.title} (${movie.year})`}</h10>\n                <Button\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    onClick={() => rowBtn(movie)}\n                    disabled={mode === 'search' ? movie.selected : false}\n                    className={classes.btn}>\n                    {mode === 'search' ? 'Nominations' : 'Remove'}\n                </Button>\n            </ListItem>\n        );\n    };\n\n    return (\n        <>\n            {data && data.length !== 0 && (\n                <Paper component=\"div\" className={classes.root}>\n                    <List>{data.map((movie) => renderRow(movie))}</List>\n                    {(!lastPageBtnDisable || !nextPageBtnDisable) && (\n                        <>\n                            <Button variant=\"outlined\" color=\"primary\" onClick={lastPageBtn} disabled={lastPageBtnDisable} className={classes.pageBtn}>\n                                {'Last'}\n                            </Button>\n                            <Button variant=\"outlined\" color=\"primary\" onClick={nextPageBtn} disabled={nextPageBtnDisable} className={classes.pageBtn}>\n                                {'Next'}\n                            </Button>\n                        </>\n                    )}\n                </Paper>\n            )}\n        </>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        paddingBottom: 10,\n        paddingLeft: 5,\n        paddingRight: 5,\n    },\n    row: {\n        display: 'flex',\n        flex: 1,\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        width: 400,\n    },\n    btn: {\n        marginLeft: 5,\n    },\n    text: {\n        marginRight: theme.spacing(1),\n        flex: 1,\n    },\n    pageBtn: {\n        marginLeft: 5,\n    },\n}));\n","export const getMovieInfo = async (movieTitle, page) => {\n    try {\n        const rawRespond = await fetch(`https://www.omdbapi.com/?apikey=5f098a0e&s=${movieTitle}&type=movie&page=${page + 1}`);\n        const respond = await rawRespond.json();\n        return respond.Search;\n    } catch (error) {\n        console.log('Error in services');\n    }\n};\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { SearchBar, MovieList } from './Component'\nimport { getMovieInfo } from './Services'\n\nexport const App = () => {\n\tconst [searchList, setSearchList] = useState([]);\n\tconst [selectedList, setSelectedList] = useState([]);\n\tconst [displaySelectedList, setDisplaySelectedList] = useState([]);\n\tconst [searchListPage, setSearchListPage] = useState(0);\n\tconst [selectedListPage, setSelectedListPage] = useState(0);\n\tconst [movieTitle, setMovieTitle] = useState('');\n\tconst [nextSearchDisable, setNextSearchDisable] = useState(true);\n\tconst classes = useStyles();\n\n\tconst searchMovie = async (title, page) => {\n\t\tconst data = await getMovieInfo(title, page);\n\t\tif(!data || data.length === 0){\n\t\t\tsetSearchList([]);\n\t\t\treturn\n\t\t}\n\t\tif(page < 99){\n\t\t\tconst nextPageData = await getMovieInfo(title, page+1);\n\t\t\tsetNextSearchDisable(!nextPageData || nextPageData.length === 0)\n\t\t}else{\n\t\t\tsetNextSearchDisable(true)\n\t\t}\n\n\t\tconst searchList = data.map((movie) => (\n\t\t\t{\n\t\t\t\tid: movie.imdbID,\n\t\t\t\ttitle: movie.Title,\n\t\t\t\tyear: movie.Year,\n\t\t\t\tselected: selectedList.findIndex((movieInList) => movieInList.id === movie.imdbID) === -1 ? false : true\n\t\t\t}\n\t\t))\n\t\tsetSearchList(searchList);\n\t}\n\n\tconst addToSelectedList = (addMovie) => {\n\t\tconst index = searchList.findIndex((movie) => movie.id === addMovie.id);\n\t\tsearchList[index].selected = true;\n\t\tconst newSelectedList = [...selectedList, addMovie];\n\t\tsetSearchList(searchList);\n\t\tsetSelectedList(newSelectedList);\n\t\tsetDisplaySelectedList(newSelectedList.slice(10*selectedListPage, 10*selectedListPage+10));\n\t}\n\n\tconst removeFromSelectedList = (removeMovie) => {\n\t\tconst removeIndex = selectedList.findIndex((movie) => movie.id === removeMovie.id);\n\t\tconst newSelectedList = [...selectedList.slice(0, removeIndex), ...selectedList.slice(removeIndex + 1, selectedList.length)];\n\t\tconst index = searchList.findIndex((movie) => movie.id === removeMovie.id);\n\t\tif(index !== -1){\n\t\t\tsearchList[index].selected = false;\n\t\t}\n\t\tsetSelectedList(newSelectedList);\n\t\tsetDisplaySelectedList(newSelectedList.slice(10*selectedListPage, 10*selectedListPage+10));\n\t}\n\n\tconst getNextSearchPage = () => {\n\t\tconst page = searchListPage + 1;\n\t\tsearchMovie(movieTitle, page);\n\t\tsetSearchListPage(page);\n\t}\n\n\tconst getLastSearchPage = () => {\n\t\tconst page = searchListPage - 1;\n\t\tsearchMovie(movieTitle, page);\n\t\tsetSearchListPage(page);\n\t}\n\n\tconst getNextSelectedPage = () => {\n\t\tconst page = selectedListPage + 1;\n\t\tsetDisplaySelectedList(selectedList.slice(10*page, 10*page+10));\n\t\tsetSelectedListPage(page);\n\t}\n\n\tconst getLastSelectedPage = () => {\n\t\tconst page = selectedListPage - 1;\n\t\tsetDisplaySelectedList(selectedList.slice(10*page, 10*page+10));\n\t\tsetSelectedListPage(page);\n\t}\n\n\tconst updateMovieTitle = async (title) => {\n\t\tsetMovieTitle(title);\n\t\tawait searchMovie(title, 0);\n\t}\n\n\treturn (\n\t\t<div className={classes.center}>\n\t\t\t<SearchBar onSearchClick={updateMovieTitle}/>\n\t\t\t<div className={classes.container}>\n\t\t\t\t<MovieList\n\t\t\t\t\tmode={'search'}\n\t\t\t\t\tdata={searchList}\n\t\t\t\t\tclassName={classes.searchList}\n\t\t\t\t\trowBtn={addToSelectedList}\n\t\t\t\t\tnextPageBtn={getNextSearchPage}\n\t\t\t\t\tnextPageBtnDisable={nextSearchDisable}\n\t\t\t\t\tlastPageBtn={getLastSearchPage}\n\t\t\t\t\tlastPageBtnDisable={searchListPage === 0}\n\t\t\t\t/>\n\t\t\t\t<MovieList\n\t\t\t\t\tmode={'selected'}\n\t\t\t\t\tdata={displaySelectedList}\n\t\t\t\t\trowBtn={removeFromSelectedList}\n\t\t\t\t\tnextPageBtn={getNextSelectedPage}\n\t\t\t\t\tnextPageBtnDisable={selectedListPage*10+displaySelectedList.length >= selectedList.length}\n\t\t\t\t\tlastPageBtn={getLastSelectedPage}\n\t\t\t\t\tlastPageBtnDisable={selectedListPage === 0}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nconst useStyles = makeStyles((theme) => ({\n\tcenter: {\n\t\tposition: 'absolute',\n\t\ttop: '50%',\n\t\tleft: '50%',\n\t\ttransform: 'translate(-50%, -50%)'\n\t},\n\tcontainer: {\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'row',\n\t\tflex: 1,\n\t\tjustifyContent: 'space-between'\n\t},\n\tsearchList: {\n\t\tmarginRight: 10\n\t},\n}));","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}