{"version":3,"sources":["Component/SearchBar.js","Component/MovieList.js","Services/index.js","App.js","reportWebVitals.js","index.js"],"names":["SearchBar","onSearchClick","classes","useStyles","useState","textValue","setTextValue","Paper","component","className","root","InputBase","input","placeholder","onChange","event","target","value","Button","variant","color","onClick","makeStyles","theme","display","alignItems","width","padding","marginBottom","marginLeft","spacing","flex","MovieList","data","rowBtn","mode","nextPageBtn","lastPageBtn","lastPageBtnDisable","nextPageBtnDisable","disableAllRowBtn","title","List","map","movie","ListItem","row","text","year","disabled","selected","btn","id","renderRow","pageBtn","paddingBottom","paddingRight","justifyContent","marginRight","getMovieInfoByTitle","movieTitle","page","a","fetch","rawRespond","json","respond","Search","console","log","getMovieInfoById","App","props","componentDidMount","location","UrlQueryStrings","search","queryString","parse","list","Promise","all","movieId","movieObject","imdbID","Title","Year","filter","curMovie","index","self","findIndex","tmpMovie","setState","selectedList","slice","loading","searchMovie","state","length","searchList","noMovieFound","nextPageData","nextSearchDisable","movieInList","addToSelectedList","addMovie","newSelectedList","removeFromSelectedList","removeMovie","removeIndex","getNextSearchPage","searchListPage","getLastSearchPage","updateMovieTitle","shareLink","url","forEach","modalVisible","onModalClose","afterCopyClick","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","error","render","background","center","banner","bannerText","container","Modal","open","onClose","shareLinkContainer","TextField","multiline","label","defaultValue","link","onCopy","newestOnTop","rtl","pauseOnFocusLoss","React","Component","withStyles","height","backgroundColor","textAlign","verticalAlign","top","left","transform","flexDirection","minHeight","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","path","document","getElementById"],"mappings":"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","file":"static/js/main.4e0d866f.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Paper, Button, InputBase } from '@material-ui/core';\n\nexport const SearchBar = ({ onSearchClick }) => {\n    const classes = useStyles();\n    const [textValue, setTextValue] = useState();\n\n    return (\n        <Paper component=\"form\" className={classes.root}>\n            <InputBase className={classes.input} placeholder=\"Please enter movie title\" onChange={(event) => setTextValue(event.target.value)} />\n            <Button variant=\"outlined\" color=\"primary\" onClick={() => onSearchClick(textValue)}>\n                Search\n            </Button>\n        </Paper>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        alignItems: 'center',\n        width: 800,\n        padding: 20,\n        marginBottom: 10,\n    },\n    input: {\n        marginLeft: theme.spacing(1),\n        flex: 1,\n    },\n}));\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { List, Button, ListItem, Paper } from '@material-ui/core';\n\nexport const MovieList = ({ data, rowBtn, mode, nextPageBtn, lastPageBtn, lastPageBtnDisable, nextPageBtnDisable, disableAllRowBtn }) => {\n    const classes = useStyles();\n\n    const renderRow = (movie) => {\n        return (\n            <ListItem className={classes.row} key={movie.id}>\n                <h10 className={classes.text}>{`${movie.title} (${movie.year})`}</h10>\n                <Button\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    onClick={() => rowBtn(movie)}\n                    disabled={disableAllRowBtn ? true : mode === 'search' ? movie.selected : false}\n                    className={classes.btn}>\n                    {mode === 'search' ? 'Nominate' : 'Remove'}\n                </Button>\n            </ListItem>\n        );\n    };\n\n    return (\n        <Paper component=\"div\" className={classes.root}>\n            <h4 className={classes.title}>{mode === 'search' ? 'Search Result' : 'Nominated'}</h4>\n            <List>{data.map((movie) => renderRow(movie))}</List>\n            {(!lastPageBtnDisable || !nextPageBtnDisable) && (\n                <>\n                    <Button variant=\"outlined\" color=\"primary\" onClick={lastPageBtn} disabled={lastPageBtnDisable} className={classes.pageBtn}>\n                        {'Last'}\n                    </Button>\n                    <Button variant=\"outlined\" color=\"primary\" onClick={nextPageBtn} disabled={nextPageBtnDisable} className={classes.pageBtn}>\n                        {'Next'}\n                    </Button>\n                </>\n            )}\n        </Paper>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        paddingBottom: 10,\n        paddingRight: 5,\n        marginBottom: 10,\n        width: 400,\n    },\n    title: {\n        marginLeft: 16,\n    },\n    row: {\n        display: 'flex',\n        flex: 1,\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        width: 400,\n    },\n    btn: {\n        marginLeft: 5,\n    },\n    text: {\n        marginRight: theme.spacing(1),\n        flex: 1,\n    },\n    pageBtn: {\n        marginLeft: 5,\n    },\n}));\n","export const getMovieInfoByTitle = async (movieTitle, page) => {\n    try {\n        const rawRespond = await fetch(`https://www.omdbapi.com/?apikey=5f098a0e&s=${movieTitle}&type=movie&page=${page + 1}`);\n        const respond = await rawRespond.json();\n        return respond.Search;\n    } catch (error) {\n        console.log('Error in services');\n    }\n};\n\nexport const getMovieInfoById = async (id) => {\n    try {\n        const rawRespond = await fetch(`https://www.omdbapi.com/?apikey=5f098a0e&i=${id}&type=movie`);\n        const respond = await rawRespond.json();\n        return respond;\n    } catch (error) {\n        console.log('Error in services');\n    }\n};\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Button, TextField, Modal } from '@material-ui/core';\nimport { SearchBar, MovieList } from './Component';\nimport { getMovieInfoByTitle, getMovieInfoById } from './Services';\nimport { Paper } from '@material-ui/core';\nimport queryString from 'query-string';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            searchList: [],\n            selectedList: [],\n            searchListPage: 0,\n            movieTitle: '',\n            nextSearchDisable: true,\n            modalVisible: false,\n            shareLink: '',\n        };\n    }\n\n    componentDidMount = async () => {\n        const location = this.props.location;\n        const UrlQueryStrings = location.search;\n        const { id } = queryString.parse(UrlQueryStrings);\n        if (id) {\n            var list = [];\n            try {\n                list = await Promise.all(\n                    id.map(async (movieId) => {\n                        const movie = await getMovieInfoById(movieId);\n                        const movieObject = {\n                            id: movie.imdbID,\n                            title: movie.Title,\n                            year: movie.Year,\n                        };\n                        return movieObject;\n                    })\n                );\n                list = list.filter((curMovie, index, self) => {\n                    return curMovie.id ? index === self.findIndex((tmpMovie) => tmpMovie.id === curMovie.id) : false;\n                });\n                this.setState({ selectedList: list.slice(0, 5), loading: false });\n            } catch (error) {\n                console.log('error in componentDidMount', error);\n                this.setState({ loading: false });\n            }\n        }\n    };\n\n    searchMovie = async (title, page) => {\n        const { selectedList } = this.state;\n        try {\n            const data = await getMovieInfoByTitle(title, page);\n            if (!data || data.length === 0) {\n                this.setState({ searchList: [] });\n                this.noMovieFound();\n                return;\n            }\n            if (page < 99) {\n                const nextPageData = await getMovieInfoByTitle(title, page + 1);\n                this.setState({ nextSearchDisable: !nextPageData || nextPageData.length === 0 });\n            } else {\n                this.setState({ nextSearchDisable: true });\n            }\n\n            const searchList = data.map((movie) => ({\n                id: movie.imdbID,\n                title: movie.Title,\n                year: movie.Year,\n                selected: selectedList.findIndex((movieInList) => movieInList.id === movie.imdbID) === -1 ? false : true,\n            }));\n            this.setState({ searchList });\n        } catch (error) {\n            console.log('error in searchMovie', error);\n        }\n    };\n\n    addToSelectedList = (addMovie) => {\n        const { searchList, selectedList } = this.state;\n        if (selectedList.length >= 5) {\n            return;\n        }\n        const index = searchList.findIndex((movie) => movie.id === addMovie.id);\n        searchList[index].selected = true;\n        const newSelectedList = [...selectedList, addMovie];\n        this.setState({ searchList, selectedList: newSelectedList });\n    };\n\n    removeFromSelectedList = (removeMovie) => {\n        const { searchList, selectedList } = this.state;\n        const removeIndex = selectedList.findIndex((movie) => movie.id === removeMovie.id);\n        const newSelectedList = [...selectedList.slice(0, removeIndex), ...selectedList.slice(removeIndex + 1, selectedList.length)];\n        const index = searchList.findIndex((movie) => movie.id === removeMovie.id);\n        if (index !== -1) {\n            searchList[index].selected = false;\n        }\n        this.setState({ selectedList: newSelectedList });\n    };\n\n    getNextSearchPage = () => {\n        const { searchListPage, movieTitle } = this.state;\n        const page = searchListPage + 1;\n        this.searchMovie(movieTitle, page);\n        this.setState({ searchListPage: page });\n    };\n\n    getLastSearchPage = () => {\n        const { searchListPage, movieTitle } = this.state;\n        const page = searchListPage - 1;\n        this.searchMovie(movieTitle, page);\n        this.setState({ searchListPage: page });\n    };\n\n    updateMovieTitle = async (movieTitle) => {\n        if (!movieTitle || movieTitle.length === 0) {\n            return;\n        }\n        this.setState({ movieTitle });\n        try {\n            await this.searchMovie(movieTitle, 0);\n        } catch (error) {\n            console.log('error in updateMovieTitle', error);\n        }\n    };\n\n    shareLink = () => {\n        const { selectedList } = this.state;\n        var url = 'https://xm-evanguo.github.io/shopify-challenge/?';\n        selectedList.forEach((movie, index) => {\n            if (index === 0) {\n                url = url + `id=${movie.id}`;\n            } else {\n                url = url + `&id=${movie.id}`;\n            }\n        });\n        this.setState({ modalVisible: true, shareLink: url });\n    };\n\n    onModalClose = () => {\n        this.setState({ modalVisible: false });\n    };\n\n    afterCopyClick = () => {\n        toast.success('Successfully copy to clipboard', {\n            position: 'top-center',\n            autoClose: 2000,\n            hideProgressBar: true,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n        });\n    };\n\n    noMovieFound = () => {\n        toast.error(`No movie found`, {\n            position: 'top-center',\n            autoClose: 2000,\n            hideProgressBar: true,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n        });\n    };\n\n    render = () => {\n        const { searchList, nextSearchDisable, searchListPage, selectedList, modalVisible, shareLink } = this.state;\n        const { classes } = this.props;\n\n        return (\n            <div className={classes.background}>\n                <Paper className={classes.center}>\n                    <h2>Movie Awards for Entrepreneurs</h2>\n                    <SearchBar onSearchClick={this.updateMovieTitle} />\n                    {selectedList.length > 4 && (\n                        <Paper className={classes.banner}>\n                            <p className={classes.bannerText}>You have nominated 5 movies</p>\n                        </Paper>\n                    )}\n                    <div className={classes.container}>\n                        <MovieList\n                            mode={'search'}\n                            data={searchList}\n                            className={classes.searchList}\n                            rowBtn={this.addToSelectedList}\n                            nextPageBtn={this.getNextSearchPage}\n                            nextPageBtnDisable={nextSearchDisable}\n                            lastPageBtn={this.getLastSearchPage}\n                            lastPageBtnDisable={searchListPage === 0}\n                            disableAllRowBtn={selectedList.length >= 5}\n                        />\n                        <MovieList\n                            mode={'selected'}\n                            data={selectedList}\n                            rowBtn={this.removeFromSelectedList}\n                            lastPageBtnDisable={true}\n                            nextPageBtnDisable={true}\n                        />\n                    </div>\n                    {selectedList.length !== 0 && (\n                        <Button variant=\"outlined\" color=\"primary\" onClick={this.shareLink} className={classes.pageBtn}>\n                            {'Create share link'}\n                        </Button>\n                    )}\n                </Paper>\n                <Modal open={modalVisible} onClose={this.onModalClose}>\n                    <Paper className={[classes.shareLinkContainer, classes.center]}>\n                        <TextField disabled multiline label=\"Share Link\" defaultValue={shareLink} className={classes.link} />\n                        <CopyToClipboard text={shareLink} onCopy={this.afterCopyClick}>\n                            <Button variant=\"outlined\" color=\"primary\" onClick={this.shareLink} className={classes.pageBtn}>\n                                {'Copy'}\n                            </Button>\n                        </CopyToClipboard>\n                    </Paper>\n                </Modal>\n                <ToastContainer\n                    position=\"top-center\"\n                    autoClose={2000}\n                    hideProgressBar\n                    newestOnTop={false}\n                    closeOnClick\n                    rtl={false}\n                    pauseOnFocusLoss={false}\n                    draggable\n                    pauseOnHover\n                />\n            </div>\n        );\n    };\n}\n\nexport default withStyles((theme) => ({\n    background: {\n        width: '100%',\n        height: '100vh',\n        backgroundColor: '#f5f5f5',\n    },\n    banner: {\n        padding: 1,\n        marginBottom: 10,\n        backgroundColor: '#f75563',\n    },\n    bannerText: {\n        color: '#ffffff',\n        textAlign: 'center',\n        verticalAlign: 'middle',\n    },\n    center: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        padding: 50,\n    },\n    container: {\n        display: 'flex',\n        flexDirection: 'row',\n        flex: 1,\n        justifyContent: 'space-between',\n    },\n    searchList: {\n        marginRight: 10,\n    },\n    shareLinkContainer: {\n        minHeight: 50,\n        width: '50%',\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    link: {\n        width: '100%',\n    },\n    pageBtn: {\n        marginLeft: 5,\n    },\n}))(App);\n","const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter>\n        <Route path=\"/\" component={App} />\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}