{"version":3,"sources":["Component/SearchBar.js","Component/MovieList.js","Services/index.js","App.js","reportWebVitals.js","index.js"],"names":["SearchBar","onSearchClick","classes","useStyles","useState","textValue","setTextValue","Paper","component","className","root","InputBase","input","placeholder","onChange","event","target","value","Button","variant","color","onClick","makeStyles","theme","display","alignItems","width","padding","marginBottom","marginLeft","spacing","flex","MovieList","data","btnOnPress","mode","List","map","movie","ListItem","row","text","title","disabled","selected","btn","renderRow","justifyContent","paddingHorizontal","marginRight","getMovieInfo","movieTitle","a","fetch","rawRespond","json","respond","Search","console","log","App","searchList","setSearchList","selectedList","setSelectedList","searchMovie","length","id","imdbID","Title","year","Year","findIndex","movieInList","center","container","addMovie","index","newSelectedList","removeMovie","removeIndex","slice","position","top","left","transform","flexDirection","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4RAIaA,EAAY,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAClBC,EAAUC,IAD4B,EAEVC,qBAFU,mBAErCC,EAFqC,KAE1BC,EAF0B,KAI5C,OACI,eAACC,EAAA,EAAD,CAAOC,UAAU,OAAOC,UAAWP,EAAQQ,KAA3C,UACI,cAACC,EAAA,EAAD,CAAWF,UAAWP,EAAQU,MAAOC,YAAY,2BAA2BC,SAAU,SAACC,GAAD,OAAWT,EAAaS,EAAMC,OAAOC,UAC3H,cAACC,EAAA,EAAD,CAAQC,QAAQ,WAAWC,MAAM,UAAUC,QAAS,kBAAMpB,EAAcI,IAAxE,wBAONF,EAAYmB,aAAW,SAACC,GAAD,MAAY,CACrCb,KAAM,CACFc,QAAS,OACTC,WAAY,SACZC,MAAO,IACPC,QAAS,GACTC,aAAc,IAElBhB,MAAO,CACHiB,WAAYN,EAAMO,QAAQ,GAC1BC,KAAM,O,gBCxBDC,EAAY,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,WAAYC,EAAW,EAAXA,KACpCjC,EAAUC,IAkBhB,OACI,cAACI,EAAA,EAAD,CAAOC,UAAU,MAAMC,UAAWP,EAAQQ,KAA1C,SACI,cAAC0B,EAAA,EAAD,UAAOH,EAAKI,KAAI,SAACC,GAAD,OAlBN,SAACA,GACf,OACI,eAACC,EAAA,EAAD,CAAU9B,UAAWP,EAAQsC,IAA7B,UACI,qBAAK/B,UAAWP,EAAQuC,KAAxB,SAA+BH,EAAMI,QACrC,cAACxB,EAAA,EAAD,CACIC,QAAQ,WACRC,MAAM,UACNC,QAAS,kBAAMa,EAAWI,IAC1BK,SAAmB,WAATR,GAAoBG,EAAMM,SACpCnC,UAAWP,EAAQ2C,IALvB,SAMc,WAATV,EAAoB,cAAgB,cAQlBW,CAAUR,WAK3CnC,EAAYmB,aAAW,SAACC,GAAD,MAAY,CACrCiB,IAAK,CACDhB,QAAS,OACTO,KAAM,EACNgB,eAAgB,gBAChBtB,WAAY,SACZC,MAAO,IACPsB,kBAAmB,GAEvBH,IAAK,CACDhB,WAAY,GAEhBY,KAAM,CACFQ,YAAa1B,EAAMO,QAAQ,GAC3BC,KAAM,OC5CDmB,EAAY,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,+EAEKC,MAAM,6CAAD,OAA8CF,EAA9C,gBAFV,cAEdG,EAFc,gBAGEA,EAAWC,OAHb,cAGdC,EAHc,yBAIbA,EAAQC,QAJK,kCAMpBC,QAAQC,IAAI,qBANQ,0DAAH,sDCKZC,EAAM,WAAO,IAAD,EACYxD,mBAAS,IADrB,mBACjByD,EADiB,KACLC,EADK,OAEgB1D,mBAAS,IAFzB,mBAEjB2D,EAFiB,KAEHC,EAFG,KAGlB9D,EAAUC,IAEV8D,EAAW,uCAAG,WAAOd,GAAP,iBAAAC,EAAA,sEACAF,EAAaC,GADb,WACblB,EADa,SAES,IAAhBA,EAAKiC,OAFE,uBAGlBJ,EAAc,IAHI,0BAMbD,EAAa5B,EAAKI,KAAI,SAACC,GAAD,MAC3B,CACC6B,GAAI7B,EAAM8B,OACV1B,MAAOJ,EAAM+B,MACbC,KAAMhC,EAAMiC,KACZ3B,UAAwF,IAA9EmB,EAAaS,WAAU,SAACC,GAAD,OAAiBA,EAAYN,KAAO7B,EAAM8B,cAG7EN,EAAcD,GAdK,2CAAH,sDAmCjB,OACC,sBAAKpD,UAAWP,EAAQwE,OAAxB,UACC,cAAC,EAAD,CAAWzE,cAAegE,IAC1B,sBAAKxD,UAAWP,EAAQyE,UAAxB,UACC,cAAC,EAAD,CAAWxC,KAAM,SAAU1B,UAAWP,EAAQ2D,WAAY5B,KAAM4B,EAAY3B,WAtBrD,SAAC0C,GAC1B,IAAMC,EAAQhB,EAAWW,WAAU,SAAClC,GAAD,OAAWA,EAAM6B,KAAOS,EAAST,MACpEN,EAAWgB,GAAOjC,UAAW,EAC7B,IAAMkC,EAAe,sBAAOf,GAAP,CAAqBa,IAC1Cd,EAAcD,GACdG,EAAgBc,MAkBd,cAAC,EAAD,CAAW3C,KAAM,WAAYF,KAAM8B,EAAc7B,WAfrB,SAAC6C,GAC/B,IAAMC,EAAcjB,EAAaS,WAAU,SAAClC,GAAD,OAAWA,EAAM6B,KAAOY,EAAYZ,MACzEW,EAAe,sBAAOf,EAAakB,MAAM,EAAGD,IAA7B,YAA8CjB,EAAakB,MAAMD,EAAc,EAAGjB,EAAaG,UAC9GW,EAAQhB,EAAWW,WAAU,SAAClC,GAAD,OAAWA,EAAM6B,KAAOY,EAAYZ,OACzD,IAAXU,IACFhB,EAAWgB,GAAOjC,UAAW,GAE9BoB,EAAgBc,aAcZ3E,EAAYmB,aAAW,SAACC,GAAD,MAAY,CACxCmD,OAAQ,CACPQ,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,yBAEZV,UAAW,CACVnD,QAAS,OACT8D,cAAe,MACfvD,KAAM,EACNgB,eAAgB,iBAEjBc,WAAY,CACXZ,YAAa,QC1DAsC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.808cc36c.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Paper, Button, InputBase } from '@material-ui/core';\n\nexport const SearchBar = ({ onSearchClick }) => {\n    const classes = useStyles();\n    const [textValue, setTextValue] = useState();\n\n    return (\n        <Paper component=\"form\" className={classes.root}>\n            <InputBase className={classes.input} placeholder=\"Please enter movie title\" onChange={(event) => setTextValue(event.target.value)} />\n            <Button variant=\"outlined\" color=\"primary\" onClick={() => onSearchClick(textValue)}>\n                Search\n            </Button>\n        </Paper>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        alignItems: 'center',\n        width: 800,\n        padding: 20,\n        marginBottom: 20,\n    },\n    input: {\n        marginLeft: theme.spacing(1),\n        flex: 1,\n    },\n}));\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { List, Button, ListItem, Paper } from '@material-ui/core';\n\nexport const MovieList = ({ data, btnOnPress, mode }) => {\n    const classes = useStyles();\n\n    const renderRow = (movie) => {\n        return (\n            <ListItem className={classes.row}>\n                <h10 className={classes.text}>{movie.title}</h10>\n                <Button\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    onClick={() => btnOnPress(movie)}\n                    disabled={mode === 'search' ? movie.selected : false}\n                    className={classes.btn}>\n                    {mode === 'search' ? 'Nominations' : 'Remove'}\n                </Button>\n            </ListItem>\n        );\n    };\n\n    return (\n        <Paper component=\"div\" className={classes.root}>\n            <List>{data.map((movie) => renderRow(movie))}</List>\n        </Paper>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    row: {\n        display: 'flex',\n        flex: 1,\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        width: 400,\n        paddingHorizontal: 5,\n    },\n    btn: {\n        marginLeft: 5,\n    },\n    text: {\n        marginRight: theme.spacing(1),\n        flex: 1,\n    },\n}));\n","export const getMovieInfo = async (movieTitle) => {\n    try {\n        const rawRespond = await fetch(`http://www.omdbapi.com/?apikey=5f098a0e&s=${movieTitle}&type=movie`);\n        const respond = await rawRespond.json();\n        return respond.Search;\n    } catch (error) {\n        console.log('Error in services');\n    }\n};\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { SearchBar, MovieList } from './Component'\nimport { getMovieInfo } from './Services'\n\nexport const App = () => {\n\tconst [searchList, setSearchList] = useState([]);\n\tconst [selectedList, setSelectedList] = useState([]);\n\tconst classes = useStyles();\n\n\tconst searchMovie = async (movieTitle) => {\n\t\tconst data = await getMovieInfo(movieTitle);\n\t\tif(!data || data.length === 0){\n\t\t\tsetSearchList([]);\n\t\t\treturn\n\t\t}\n\t\tconst searchList = data.map((movie) => (\n\t\t\t{\n\t\t\t\tid: movie.imdbID,\n\t\t\t\ttitle: movie.Title,\n\t\t\t\tyear: movie.Year,\n\t\t\t\tselected: selectedList.findIndex((movieInList) => movieInList.id === movie.imdbID) === -1 ? false : true\n\t\t\t}\n\t\t))\n\t\tsetSearchList(searchList);\n\t}\n\n\tconst addToSelectedList = (addMovie) => {\n\t\tconst index = searchList.findIndex((movie) => movie.id === addMovie.id);\n\t\tsearchList[index].selected = true;\n\t\tconst newSelectedList = [...selectedList, addMovie];\n\t\tsetSearchList(searchList);\n\t\tsetSelectedList(newSelectedList);\n\t}\n\n\tconst removeFromSelectedList = (removeMovie) => {\n\t\tconst removeIndex = selectedList.findIndex((movie) => movie.id === removeMovie.id);\n\t\tconst newSelectedList = [...selectedList.slice(0, removeIndex), ...selectedList.slice(removeIndex + 1, selectedList.length)];\n\t\tconst index = searchList.findIndex((movie) => movie.id === removeMovie.id);\n\t\tif(index !== -1){\n\t\t\tsearchList[index].selected = false;\n\t\t}\n\t\tsetSelectedList(newSelectedList)\n\t}\n\n\treturn (\n\t\t<div className={classes.center}>\n\t\t\t<SearchBar onSearchClick={searchMovie}/>\n\t\t\t<div className={classes.container}>\n\t\t\t\t<MovieList mode={'search'} className={classes.searchList} data={searchList} btnOnPress={addToSelectedList} />\n\t\t\t\t<MovieList mode={'selected'} data={selectedList} btnOnPress={removeFromSelectedList} />\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nconst useStyles = makeStyles((theme) => ({\n\tcenter: {\n\t\tposition: 'absolute',\n\t\ttop: '50%',\n\t\tleft: '50%',\n\t\ttransform: 'translate(-50%, -50%)'\n\t},\n\tcontainer: {\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'row',\n\t\tflex: 1,\n\t\tjustifyContent: 'space-between'\n\t},\n\tsearchList: {\n\t\tmarginRight: 10\n\t},\n}));","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}